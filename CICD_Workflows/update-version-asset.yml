name: ⚙️ Update Build Version Asset

on:
  workflow_dispatch:
    inputs:
      newVersion:
        description: "The new version to set in the ScriptableObject (e.g., v1.2.3)"
        required: true
      assetPath:
        description: "The path to the PipelineOptions asset to update"
        required: true
        default: "Assets/Editor/DefaultReleaseOptions.asset" # A sensible default
      targetBranch:
        description: "The branch to commit the change to"
        required: true
        default: "develop"

jobs:
  update_asset:
    name: Update ScriptableObject Version
    runs-on: ubuntu-latest
    permissions:
      contents: write # Essential for pushing changes back to the repo

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.targetBranch }} # Checkout the branch we want to commit to
          token: ${{ secrets.CICD_PAT }}   # Use a PAT to ensure commit pushes trigger other workflows if needed

      - name: Update Version in Asset File
        run: |
          echo "Searching for asset at path: ${{ inputs.assetPath }}"
          if [ ! -f "${{ inputs.assetPath }}" ]; then
            echo "❌ Asset file not found at specified path."
            exit 1
          fi
          
          echo "Current version line:"
          grep "buildVersion:" "${{ inputs.assetPath }}"
          
          # Use sed to find the buildVersion line and replace its value
          sed -i 's/buildVersion: .*/buildVersion: ${{ inputs.newVersion }}/' "${{ inputs.assetPath }}"
          
          echo "Updated version line:"
          grep "buildVersion:" "${{ inputs.assetPath }}"

      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions-bot@users.noreply.github.com"
          
          git add "${{ inputs.assetPath }}"
          
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit. The version was already up-to-date."
          else
            git commit -m "chore(version): Update build version to ${{ inputs.newVersion }} [skip ci]"
            git push origin ${{ inputs.targetBranch }}
            echo "✅ Successfully committed and pushed version update."
          fi
